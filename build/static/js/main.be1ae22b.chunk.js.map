{"version":3,"sources":["components/ShapeGrid.tsx","components/Map.tsx","components/NavMapBtn.tsx","components/Nav.tsx","components/Modal.tsx","utils/chartCSVGenerator.ts","components/VizFigure.tsx","components/Caret.tsx","components/VizSelectors.tsx","utils/csvGenerator.ts","components/VizContainer.tsx","components/ReturnArrow.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["ShapeGrid","clickHandler","selectedGridCell","map","useLeaflet","useEffect","shp","then","data","L","geoJSON","style","feature","properties","Center_Lat","Center_Lon","styleSelected","onEachFeature","addTo","color","layer","on","setStyle","out","push","toFixed","bindTooltip","join","direction","offset","point","x","y","openTooltip","unbindTooltip","e","_zoom","LeafletMap","center","zoom","zoomControl","id","TileLayer","url","NavMapBtn","buttonClickHandler","mapClickHandler","onClick","Nav","renderMapView","navBtnClick","navMapClick","Number","row_index_","column_ind","Modal","showModal","closeModal","calcMinMax","arr","sort","a","b","length","createChartCSV","gridJSON","xAxisParam","decade","returnInt","duration","durArr","returnArr","decadeList","decadeStrMap","gcmList","rows","i","allValues","j","gcmVal","minMaxArr","decadeStr","require","Highcharts","VizFigure","vizConfig","gridCell","chart","useRef","csvFileName","pngFileName","chartCSVData","Object","keys","ref","updateArgs","highcharts","options","current","exportChart","filename","Caret","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","VizSelectors","csvData","xAxisToggle","handleReturnIntChange","handleDurationChange","handleDecadeChange","fileName","type","value","name","checked","onChange","jsonToCSV","g","h","durRetDecValuesArr","VizContainer","state","zoomType","spacingBottom","credits","position","align","enabled","text","exporting","scale","chartOptions","title","fontSize","yAxis","labels","allowDecimals","xAxis","categories","plotOptions","scatter","marker","radius","plotLines","legend","layout","verticalAlign","floating","backgroundColor","borderWidth","states","hover","lineColor","series","border","tooltip","headerFormat","pointFormat","symbol","this","fetchJSON","props","prevProps","fetch","headers","response","json","chartData","filterDecadeData","filterPrecipData","newVizConfig","setState","catch","err","console","log","chartType","filterValue","modelsArr","mediansArr","durArrValues","returnArrValues","decadeData","gcmKey","gcmDataObj","durKey","durDataObj","returnIntKey","projectionVal","durStr","substring","chartPoint","indexOf","gcm","slice","returnIntStr","retIntKey","key","event","target","bind","React","Component","ReturnArrow","version","xmlnsXlink","App","mapZoom","mapClick","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.be1ae22b.chunk.js","sourcesContent":["//@ts-nocheck\nimport React, { useEffect } from 'react';\nimport shp from \"shpjs\";\nimport { useLeaflet } from \"react-leaflet\";\nimport L , { LeafletEvent } from \"leaflet\";\nimport SelectedGridCell from '../types/GridCell'\n\ninterface ShapeGridProps {\n  selectedGridCell: SelectedGridCell\n  clickHandler: (e: LeafletEvent, feature: any, mapZoom: number) => void;\n};\n\nconst ShapeGrid: React.FC<ShapeGridProps> = ({ clickHandler, selectedGridCell }) => {\n  const { map } = useLeaflet();\n  const shapeZipUrl = \"WRFgridRectangles_NoOcean_Attribs.zip\";\n\n  useEffect(() => {\n    let gridLayer: any = [];\n\n    shp(shapeZipUrl).then((data: any) => {\n      gridLayer = L.geoJSON(data, {\n        style: (feature:any) => {\n          return (feature.properties.Center_Lat === selectedGridCell.Center_Lat && feature.properties.Center_Lon === selectedGridCell.Center_Lon) ? styleSelected : style\n        },\n        onEachFeature: onEachFeature\n      });\n      gridLayer.addTo(map);\n    });\n\n    const style = {\n      color: 'rgb(199, 169, 62, .2)',\n    }\n  \n    const styleSelected = {\n      color: 'rgb(11, 118, 183, .6)',\n    }\n    \n    function onEachFeature(feature: any, layer: any) {\n      layer.on('mouseover', () => {\n        layer.setStyle(styleSelected);\n        let out = [];\n        if (feature.properties) {\n          out.push(\"Center Lat/Long: <b>(\" + feature.properties[\"Center_Lat\"].toFixed(3) + \", \" + feature.properties[\"Center_Lon\"].toFixed(3) + \")</b>\");\n          out.push(\"Row-Column ID: <b>\" + feature.properties[\"row_index_\"] + \"-\" + feature.properties[\"column_ind\"] + \"</b>\");\n          layer.bindTooltip(out.join(\"<br />\"), {direction: \"top\", offset: L.point({x: 0, y: -20})});\n          layer.openTooltip()\n        }\n      });\n      layer.on('mouseout', () => {\n        if (feature.properties.Center_Lat !== selectedGridCell.Center_Lat && feature.properties.Center_Lon !== selectedGridCell.Center_Lon) {\n          layer.setStyle(style);\n        }\n        layer.unbindTooltip()\n      });\n      layer.on('click', (e: LeafletEvent) => {\n        clickHandler(e, feature, map._zoom);\n      });\n    \n    };\n    \n  }, [map, clickHandler, selectedGridCell])\n\n  return null;\n}\n\nexport default ShapeGrid","import React from 'react';\nimport ShapeGrid from './ShapeGrid'\nimport '../styles/Map.css';\nimport { LeafletEvent, LatLngTuple } from 'leaflet';\nimport { Map, TileLayer } from 'react-leaflet'\nimport SelectedGridCell from '../types/GridCell'\n\n\ninterface MapProps {\n  selectedGridCell: SelectedGridCell;\n  center: LatLngTuple\n  zoom: number;\n  zoomControl: boolean;\n  clickHandler: (e: LeafletEvent, feature: any, mapZoom: number) => void;\n}\n\nconst LeafletMap: React.FC<MapProps> = ({ selectedGridCell, \n                                          center,\n                                          zoom, \n                                          zoomControl, \n                                          clickHandler }) => {\n\n  return (\n    <Map \n      id=\"map-container\" \n      center={center}\n      zoom={zoom} \n      zoomControl={zoomControl} \n    >\n      <TileLayer\n        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n      >\n      </TileLayer>\n      <ShapeGrid clickHandler={clickHandler} selectedGridCell={selectedGridCell}/>\n    </Map>\n  );\n    \n}\n\nexport default LeafletMap;","import '../styles/NavMapBtn.css';\nimport React from 'react';\nimport LeafletMap from './Map'\nimport { LeafletEvent } from 'leaflet';\nimport GridCell from '../types/GridCell'\n\ninterface MapBtnProps {\n  selectedGridCell: GridCell;\n  buttonClickHandler: (event: any) => void;\n  mapClickHandler: (e: LeafletEvent, feature: any, mapZoom: number) => void;\n}\n\nconst NavMapBtn: React.FC<MapBtnProps> = ({ selectedGridCell, buttonClickHandler, mapClickHandler }) => {\n\n  return (\n    <div id=\"nav-map\">\n      <div id=\"map-thumb\">\n        <LeafletMap \n          selectedGridCell={selectedGridCell}\n          center={[selectedGridCell.Center_Lat + 0.28, selectedGridCell.Center_Lon]}\n          zoom={8}\n          clickHandler={mapClickHandler}\n          zoomControl={true}\n        />\n        <div id=\"nav-map-text\">Click to select new cell, click and drag to pan</div>\n      </div>\n      <button id=\"nav-btn\" onClick={buttonClickHandler}>\n        Return to Map\n      </button>\n    </div>\n  )\n};\n\nexport default NavMapBtn;","import React from 'react';\nimport '../styles/Nav.css';\nimport { LeafletEvent } from 'leaflet';\nimport NavMapBtn from './NavMapBtn'\nimport GridCell from '../types/GridCell'\n\ninterface Props {\n  renderMapView: boolean;\n  selectedGridCell: GridCell;\n  navBtnClick: (event: any) => void;\n  navMapClick: (e: LeafletEvent, feature: any, mapZoom: number) => void;\n};\n\nconst Nav: React.FC<Props> = ({ renderMapView, \n                                selectedGridCell, \n                                navBtnClick, \n                                navMapClick }) => { \n\n  return (\n    <div id=\"nav-container\">\n      <div id=\"nav-logo\"/>\n      <div id=\"nav-text\">\n        <div id=\"nav-title\">\n          Projected Changes in Extreme Precipitation\n        </div>\n        { renderMapView ? \n          (<div id=\"nav-subtitle-map\">\n            Click a grid cell to see extreme precipitation projection\n          </div>)\n        :\n          (<div id=\"nav-subtitle-container\">\n            <div id=\"nav-subtitle-base\">\n              Selected Grid Cell:   \n            </div>\n            <div id=\"nav-subtitle-dynamic\">\n              LAT {Number(selectedGridCell.Center_Lat.toFixed(3))}, LONG {Number(selectedGridCell.Center_Lon.toFixed(3))}, Row-Col {selectedGridCell.row_index_ + \"-\" + selectedGridCell.column_ind}\n            </div>\n          </div>)\n        }\n      </div>\n      { renderMapView ? \n        (<div id=\"nav-\"></div>)\n      :\n        \n        (<NavMapBtn \n          selectedGridCell={selectedGridCell} \n          buttonClickHandler={navBtnClick} \n          mapClickHandler={navMapClick}\n        />)\n      }\n     \n    </div>\n  );\n}\n\nexport default Nav;\n","import React from 'react'\nimport \"../styles/Modal.css\"\n\ninterface Props {\n  showModal: boolean;\n  closeModal: () => void;\n};\n\nconst Modal: React.FC<Props> = ({ showModal, closeModal }) => { \n\n  if (!showModal) {\n    return null;\n  }\n\n  return (\n    <div id=\"modal-screen\">\n      <div id=\"modal\">\n        <h2>Projected Changes in Extreme Precipitation</h2>\n        <div id=\"content\">\n          <h3>\n            About the tool\n          </h3>\n          <h4>\n            The purpose of this tool is to visualize projected changes in heavy rainfall events across the Pacific Northwest. This tool provides extreme precipitation projections as a function of decade, duration, and return interval (frequency). You can customize the tool to select various precipitation frequencies and durations to ensure the data shown in the tool is relevant to your specific needs. The tool lets you download graphics for later use and you can also download the data for each grid cell in an excel-readable format.\n          </h4>\n          <br/>\n          <h3>\n            Acknowledgements\n          </h3>\n          <h4>\n            The original source of funding for this work was the King County Department of Natural Resources and Parks, with additional provided by the Washington State Department of Ecology. Since then, the work has been refined and expanded with funding from the City of Everett, Thurston County, the Port Gamble S’Klallam Tribe, Portland’s Bureau of Environmental Services, Clackamas County, and the City of Gresham.\n            <br/>\n            <br/>\n            The regional climate model simulations were produced by Professor Cliff Mass of UW Atmospheric Sciences, with funding from the Amazon Catalyst program.\n          </h4>\n        </div>\n        <div id=\"actions\">\n          <button id=\"toggle-button\" onClick={closeModal}>\n            close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal","const createChartCSV: any = (gridJSON: any, \n                            xAxisParam: string, \n                            decade: string, \n                            returnInt: number,\n                            duration: number\n                            ) => {\n\n  const durArr: number[] = [1, 2, 6, 24, 72];\n  const returnArr: number[] = [2, 5, 10, 25, 50, 100];\n  const decadeList: string[] = [\n    \"2020-2049\",\n    \"2030-2059\",\n    \"2040-2069\",\n    \"2050-2079\",\n    \"2060-2089\",\n    \"2070-2099\"\n  ];\n\n  const decadeStrMap: any = {\n    \"2030\": \"2020-2049\",\n    \"2040\": \"2030-2059\",\n    \"2050\": \"2040-2069\",\n    \"2060\": \"2050-2079\",\n    \"2070\": \"2060-2089\",\n    \"2080\": \"2070-2099\"\n  };\n\n  const gcmList = [\n    \"access1.0_RCP8.5_wyMAX\",\n    \"access1.3_RCP8.5_wyMAX\",\n    \"bcc-csm1.1_RCP8.5_wyMAX\",\n    \"canesm2_RCP8.5_wyMAX\",\n    \"ccsm4_RCP8.5_wyMAX\",\n    \"csiro-mk3.6.0_RCP8.5_wyMAX\",\n    \"fgoals-g2_RCP8.5_wyMAX\",\n    \"gfdl-cm3_RCP8.5_wyMAX\",\n    \"giss-e2-h_RCP8.5_wyMAX\",\n    \"miroc5_RCP8.5_wyMAX\",\n    \"mri-cgcm3_RCP8.5_wyMAX\",\n    \"noresm1-m_RCP8.5_wyMAX\",\n    \"ensemble_RCP8.5_wyMAX\"\n  ];\n\n  const headers = [\n    \"Model\",\n    \"Return Interval(years)\",\n    \"Duration(hours)\",\n    \"Time Period\",\n    \"Projected Change(%)\",\n  ];\n\n  let rows : any[] = [];\n  \n  rows.push(headers);\n\n  if (xAxisParam === \"decade\") {\n\n    for(let i = 0; i < decadeList.length; i++) {\n      let allValues: number[] = [];\n      for(let j = 0; j < gcmList.length; j++) {\n        const gcmVal = gridJSON[decadeList[i]][gcmList[j]][duration+\"-hr\"][ returnInt+\"-yr\"];\n        if(gcmList[j] === \"ensemble_RCP8.5_wyMAX\") {\n          rows.push([\"Average\", returnInt, duration, decadeList[i], gcmVal.toFixed(1)]);\n        } else {\n          rows.push([gcmList[j], returnInt, duration, decadeList[i], gcmVal.toFixed(1)]);\n          allValues.push(gcmVal);\n        }\n      }\n      const minMaxArr: number[] = calcMinMax(allValues);\n      rows.push([\"Min\", returnInt, duration, decadeList[i], minMaxArr[0].toFixed(1)])\n      rows.push([\"Max\", returnInt, duration, decadeList[i], minMaxArr[1].toFixed(1)])\n    }\n\n  } else if (xAxisParam === \"duration\") {\n    const decadeStr = decadeStrMap[decade];\n    let allValues: number[] = [];\n    for(let i = 0; i < durArr.length; i++) {\n      for(let j = 0; j < gcmList.length; j++) {\n        const gcmVal = gridJSON[decadeStr][gcmList[j]][durArr[i]+\"-hr\"][ returnInt+\"-yr\"];\n        if(gcmList[j] === \"ensemble_RCP8.5_wyMAX\") {\n          rows.push([\"Average\", returnInt, durArr[i], decadeStr, gcmVal.toFixed(1)]);\n        } else {\n          rows.push([gcmList[j], returnInt, durArr[i], decadeStr, gcmVal.toFixed(1)]);\n          allValues.push(gcmVal);\n        }\n      }\n      const minMaxArr: number[] = calcMinMax(allValues);\n      rows.push([\"Min\", returnInt, durArr[i], decadeStr, minMaxArr[0].toFixed(1)])\n      rows.push([\"Max\", returnInt, durArr[i], decadeStr, minMaxArr[1].toFixed(1)])\n    }\n\n  } else if (xAxisParam === \"return-int\") {\n    let allValues: number[] = [];\n    const decadeStr = decadeStrMap[decade];\n    for(let i = 0; i < returnArr.length; i++) {\n      for(let j = 0; j < gcmList.length; j++) {\n        const gcmVal = gridJSON[decadeStr][gcmList[j]][duration+\"-hr\"][ returnArr[i]+\"-yr\"];\n        if(gcmList[j] === \"ensemble_RCP8.5_wyMAX\") {\n          rows.push([\"Average\", returnArr[i], duration, decadeStr, gcmVal.toFixed(1)]);\n        } else {\n          rows.push([gcmList[j], returnArr[i], duration, decadeStr, gcmVal.toFixed(1)]);\n          allValues.push(gcmVal);\n        }\n      }\n      const minMaxArr: number[] = calcMinMax(allValues);\n      rows.push([\"Min\", returnArr[i], duration, decadeStr, minMaxArr[0].toFixed(1)])\n      rows.push([\"Max\", returnArr[i], duration, decadeStr, minMaxArr[1].toFixed(1)])\n    }\n  }\n  return rows;\n}\n\nconst calcMinMax: any = (arr: number[]) => {\n  //sorts array lowest to highest value\n  arr.sort((a, b) => a - b)\n  return [arr[0], arr[arr.length -1]]\n}\n\nexport default createChartCSV;","import React, { useRef } from 'react';\nimport { CSVLink } from 'react-csv';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport GridCell from '../types/GridCell'\nimport createChartCSV from \"../utils/chartCSVGenerator\"\nimport '../styles/VizFigure.css';\n\nrequire('highcharts/modules/exporting')(Highcharts);\nrequire('highcharts/modules/export-data')(Highcharts);\n\ninterface VizFigProps {\n  vizConfig: object;\n  xAxisParam: string;\n  returnInt: number;\n  decade: string;\n  duration: number;\n  gridJSON: object;\n  gridCell: GridCell;  \n}\nconst VizFigure: React.FC<VizFigProps> = ({ vizConfig,\n                                            xAxisParam,\n                                            returnInt,\n                                            decade,\n                                            duration,\n                                            gridJSON,\n                                            gridCell\n                                          }) => {\n\n  const chart = useRef<any>(null);\n  \n  let csvFileName: string = '';\n  \n  if (xAxisParam === \"decade\") {\n    csvFileName = `${xAxisParam}-chart-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${duration}-hr.csv`;\n  } else if (xAxisParam === \"return-int\") {\n    csvFileName = `${xAxisParam}-chart-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${duration}-hr_${decade}s.csv`;\n  } else if (xAxisParam === \"duration\") {\n    csvFileName = `${xAxisParam}-chart-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${decade}s.csv`;\n  }\n\n  let pngFileName: string = '';\n  \n  if (xAxisParam === \"decade\") {\n    pngFileName = `${xAxisParam}-chart-img_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${duration}-hr`;\n  } else if (xAxisParam === \"return-int\") {\n    pngFileName = `${xAxisParam}-chart-img_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${duration}-hr_${decade}s`;\n  } else if (xAxisParam === \"duration\") {\n    pngFileName = `${xAxisParam}-chart-img_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${decade}s`;\n  }\n\n\n  const downloadImage = () => { \n    if (chart && chart.current && chart.current.chart) {\n      chart.current.chart.exportChart({filename: pngFileName});\n    }\n  };  \n  \n  let chartCSVData: any = [[]];\n  if (Object.keys(gridJSON).length > 0) {\n    chartCSVData = createChartCSV(gridJSON, xAxisParam, decade, returnInt, duration);\n  }\n\n  return (\n    <div id=\"fig-container\">\n      <div id=\"viz-fig\">\n        <HighchartsReact id=\"viz-fig\" ref={chart} updateArgs={[true]} highcharts={Highcharts} options={vizConfig}></HighchartsReact>\n      </div>\n      <div id=\"chart-info\">\n        Click and drag over points to zoom. \n      </div>\n      <div id=\"citation\">\n        Recommended Citation: Morgan, H., Mauger, G., Won, J., Gould, D. 2021 &nbsp;\n        <i>Projected Changes in Extreme Precipitation Web Tool.</i> &nbsp;\n        University of Washington Climate Impacts Group. &nbsp;\n        <u>https:/doi.org/10.6069/79CV-4233</u>\n      </div>\n      <div id=\"btn-row\">\n        <button onClick={downloadImage} id=\"fig-btn\">\n          Download Figure\n        </button>\n        <CSVLink data={chartCSVData} filename={csvFileName}>\n          <button id=\"data-btn\">\n            Download Chart Data\n          </button>\n        </CSVLink>\n      </div>\n    </div>\n  )\n  \n}\n\nexport default VizFigure","import React from 'react';\nimport \"../styles/Caret.css\"\n\nconst Caret: React.FC = () => {\n  return (\n    <svg className=\"caret\" width=\"7\" height=\"6\" viewBox=\"0 0 7 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.601166 0.800049H5.40117C5.89517 0.800049 6.17717 1.36405 5.88117 1.76005L3.48117 4.96005C3.24117 5.28005 2.76117 5.28005 2.52117 4.96005L0.121166 1.76005C-0.175834 1.36405 0.107166 0.800049 0.601166 0.800049Z\" fill=\"#757575\"/>\n    </svg>\n  )\n}\n\nexport default Caret;","import React from 'react'\nimport \"../styles/VizSelectors.css\"\nimport Caret from \"./Caret\"\nimport { CSVLink } from \"react-csv\";\nimport GridCell from '../types/GridCell'\n \n\ntype SelectorProps = {\n  xAxisParam: string;\n  returnInt: number;\n  decade: string;\n  duration: number;\n  csvData: any[];\n  gridCell: GridCell ;\n  xAxisToggle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleReturnIntChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  handleDurationChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  handleDecadeChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst VizSelectors: React.FC<SelectorProps> = ({duration, \n                                                returnInt, \n                                                decade, \n                                                xAxisParam, \n                                                csvData,\n                                                gridCell,\n                                                xAxisToggle, \n                                                handleReturnIntChange, \n                                                handleDurationChange, \n                                                handleDecadeChange }) => {\n                 \n  let fileName: string = '';                                                \n  if (xAxisParam === \"decade\") {\n    fileName = `grid-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${duration}-hr.csv`;\n  } else if (xAxisParam === \"return-int\") {\n    fileName = `grid-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${duration}-hr_${decade}s.csv`;\n  } else if (xAxisParam === \"duration\") {\n    fileName = `grid-data_row${gridCell.row_index_}-col${gridCell.column_ind}_lat${gridCell.Center_Lat}-lon${gridCell.Center_Lon}_${returnInt}-yr_${decade}s.csv`;\n  }\n\n  return (\n    <div id=\"viz-select\">\n      <div id=\"radios\">\n        <div className=\"radio-container\">\n          <h3 style={{color: \"#757575 \"}}> Customize the graph </h3>\n          <div id=\"radio-header\">1. Select x-axis</div>\n          <label className=\"radio-row\">\n            <input type=\"radio\" value=\"duration\" name=\"xParam\" checked={xAxisParam === \"duration\"} onChange={xAxisToggle}/> \n            <span className=\"radio-label\">Duration</span>\n          </label>\n          <div className=\"radio-description\">How long a precipitation event lasts (e.g., 1 hour, 6 hours, 24 hours).</div>\n        </div>\n        <div className=\"radio-container\">\n          <label className=\"radio-row\">\n            <input type=\"radio\" value=\"return-int\" name=\"xParam\" checked={xAxisParam === \"return-int\"} onChange={xAxisToggle}/> \n            <span className=\"radio-label\">Return Interval</span>\n          </label>\n          <div className=\"radio-description\">How common or rare a precipitation event of a specific duration is. A larger return interval implies a rarer and larger event.</div>\n        </div>\n        <div className=\"radio-container\"> \n          <label className=\"radio-row\">\n            <input type=\"radio\" value=\"decade\" name=\"xParam\" checked={xAxisParam === \"decade\"} onChange={xAxisToggle}/> \n            <span className=\"radio-label\">Decade</span>\n          </label>\n          <div className=\"radio-description\">Change for each future decade. Each decade represents a 30-year average (e.g., ‘2030s’ = 2020-2049). </div>\n        </div>\n      </div> \n      { (() => {\n        if (xAxisParam === 'decade') {\n          return <div id=\"selectors\">\n            <div id=\"parameter-header\">2. Specify other parameters</div>\n            <div className=\"select-container\">\n              <label>\n                Return Interval\n              </label>\n              <div className=\"select-row\">\n                <select value={returnInt} onChange={handleReturnIntChange}>\n                  <option value=\"2\">2-year</option>\n                  <option value=\"5\">5-year</option>\n                  <option value=\"10\">10-year</option>\n                  <option value=\"25\">25-year</option>\n                  <option value=\"50\">50-year</option>\n                  <option value=\"100\">100-year</option>\n                </select>\n                <Caret/>\n              </div>\n            </div>\n            <div className=\"select-container\">\n              <label>\n                Duration\n              </label>\n              <div className=\"select-row\">\n                <select value={duration} onChange={handleDurationChange}>\n                  <option value=\"1\">1-hour</option>\n                  <option value=\"2\">2-hour</option>\n                  <option value=\"6\">6-hour</option>\n                  <option value=\"24\">24-hour</option>\n                  <option value=\"72\">72-hour</option>\n                </select>\n                <Caret/>\n              </div>\n            </div>\n          </div>\n        } else if (xAxisParam === \"return-int\") {\n          return <div id=\"selectors\">\n            <div id=\"parameter-header\">2. Specify other parameters</div>\n            <div className=\"select-container\">\n              <label>\n                Duration\n              </label>\n              <div className=\"select-row\">\n                <select value={duration} onChange={handleDurationChange}>\n                  <option value=\"1\">1-hour</option>\n                  <option value=\"2\">2-hour</option>\n                  <option value=\"6\">6-hour</option>\n                  <option value=\"24\">24-hour</option>\n                  <option value=\"72\">72-hour</option>\n                </select>\n                <Caret/>\n              </div>\n            </div>\n            <div className=\"select-container\">\n              <label> \n                Decade\n              </label>\n              <div className=\"select-row\">\n                <select value={decade} onChange={handleDecadeChange}>\n                  <option value=\"2030\">2030s</option>\n                  <option value=\"2040\">2040s</option>\n                  <option value=\"2050\">2050s</option>\n                  <option value=\"2060\">2060s</option>\n                  <option value=\"2070\">2070s</option>\n                  <option value=\"2080\">2080s</option>\n                </select>\n                <Caret/>\n              </div>\n            </div> \n          </div>\n        } else if (xAxisParam === \"duration\") {\n          return <div id=\"selectors\">\n            <div id=\"parameter-header\">2. Specify other parameters</div>\n            <div className=\"select-container\">\n              <label>\n                Return Interval\n              </label>\n              <div className=\"select-row\">\n                <select value={returnInt} onChange={handleReturnIntChange}>\n                  <option value=\"2\">2-year</option>\n                  <option value=\"5\">5-year</option>\n                  <option value=\"10\">10-year</option>\n                  <option value=\"25\">25-year</option>\n                  <option value=\"50\">50-year</option>\n                  <option value=\"100\">100-year</option>\n                </select>\n                <Caret/>\n              </div>\n            </div>\n            <div className=\"select-container\">\n              <label> \n                Decade\n              </label>\n              <div className=\"select-row\">\n                <select value={decade} onChange={handleDecadeChange}>\n                  <option value=\"2030\">2030s</option>\n                  <option value=\"2040\">2040s</option>\n                  <option value=\"2050\">2050s</option>\n                  <option value=\"2060\">2060s</option>\n                  <option value=\"2070\">2070s</option>\n                  <option value=\"2080\">2080s</option>\n                </select>\n                <Caret/>\n              </div>\n            </div>\n          </div>\n        }\n      })()\n      }\n      <CSVLink id=\"grid-btn-wrapper\" data={csvData} filename={fileName}>\n        <button id=\"grid-data-btn\">\n          Download All Data For Grid Cell\n        </button>\n      </CSVLink>\n    </div>\n  )\n}\n\nexport default VizSelectors;","// generates csv for all grid cell data\n\nconst jsonToCSV: any = (gridJSON: any) => {\n\n  const durArr: number[] = [1, 2, 6, 24, 72];\n  const returnArr: number[] = [2, 5, 10, 25, 50, 100];\n  const decadeList: string[] = [\n    \"2020-2049\",\n    \"2030-2059\",\n    \"2040-2069\",\n    \"2050-2079\",\n    \"2060-2089\",\n    \"2070-2099\"\n  ];\n\n  const gcmList = [\n    \"access1.0_RCP8.5_wyMAX\",\n    \"access1.3_RCP8.5_wyMAX\",\n    \"bcc-csm1.1_RCP8.5_wyMAX\",\n    \"canesm2_RCP8.5_wyMAX\",\n    \"ccsm4_RCP8.5_wyMAX\",\n    \"csiro-mk3.6.0_RCP8.5_wyMAX\",\n    \"fgoals-g2_RCP8.5_wyMAX\",\n    \"gfdl-cm3_RCP8.5_wyMAX\",\n    \"giss-e2-h_RCP8.5_wyMAX\",\n    \"miroc5_RCP8.5_wyMAX\",\n    \"mri-cgcm3_RCP8.5_wyMAX\",\n    \"noresm1-m_RCP8.5_wyMAX\",\n    \"ensemble_RCP8.5_wyMAX\"\n  ];\n\n  const headers = [\n    \"Model\",\n    \"Return Interval(years)\",\n    \"Duration(hours)\",\n    \"Time Period\",\n    \"Projected Change(%)\",\n  ];\n\n  let rows : any[] = [];\n\n  rows.push(headers);\n\n  for(let g = 0; g < durArr.length; g++) {\n    for(let h = 0; h < returnArr.length; h++) {\n      for(let i = 0; i < decadeList.length; i++) {\n        let durRetDecValuesArr: number[] = [];\n        for(let j = 0; j < gcmList.length; j++) {\n          const gcmVal = gridJSON[decadeList[i]][gcmList[j]][durArr[g]+\"-hr\"][ returnArr[h]+\"-yr\"];\n          if(gcmList[j] === \"ensemble_RCP8.5_wyMAX\") {\n            rows.push([\"Average\", returnArr[h], durArr[g], decadeList[i], gcmVal.toFixed(1)]);\n          } else {\n            rows.push([gcmList[j], returnArr[h], durArr[g], decadeList[i], gcmVal.toFixed(1)]);\n            durRetDecValuesArr.push(gcmVal);\n          }\n        }\n        const minMaxArr: number[] = calcMinMax(durRetDecValuesArr);\n        rows.push([\"Min\", returnArr[h], durArr[g], decadeList[i], minMaxArr[0].toFixed(1)])\n        rows.push([\"Max\", returnArr[h], durArr[g], decadeList[i], minMaxArr[1].toFixed(1)])\n      }\n    }\n  }\n\n  return rows;\n}\n\nconst calcMinMax: any = (arr: number[]) => {\n  //sorts array lowest to highest value\n  arr.sort((a, b) => a - b)\n  return [arr[0], arr[arr.length -1]]\n}\n\nexport default jsonToCSV;","//@ts-nocheck\nimport React from 'react';\nimport '../styles/VizContainer.css';\nimport VizFigure from './VizFigure';\nimport VizSelectors from './VizSelectors';\nimport jsonToCSV from '../utils/csvGenerator';\nimport GridCell from '../types/GridCell'\n\ninterface VizProps {\n  selectedGridCell: GridCell;\n}\n\ntype VizState = {\n  xAxisParam: string;\n  returnInt: number;\n  decade: string;\n  duration: number;\n  vizConfig: object;\n  gridJSON: object;\n  csvData: any[];\n}\n\n\nclass VizContainer extends React.Component<VizProps, VizState> {\n\n  public readonly state: Readonly<VizState> = {\n    xAxisParam: 'duration',\n    returnInt: 25,\n    decade: '2050',\n    duration: 1,\n    gridJSON: {},\n    csvData: [[]],\n    vizConfig: {\n      chart: {\n        type: 'scatter',\n        zoomType: 'xy',\n        spacingBottom: 40,\n      },\n      credits: {\n        position: {\n            align: 'right',\n            y: -15,\n            x:-15\n        },\n        enabled: true,\n        text: \"Figure Credit: University of Washington Climate Impacts Group <br/> Highcharts.com\"\n      },\n      exporting: {\n        enabled: false,\n        scale: 1, \n        chartOptions: {\n            chart:{\n              height: 700,\n              width:  1200,\n            },\n            title: {\n              text: 'Projected Change v Duration: 25-year Event, 2050s', //changed by radio and menu\n              style: {\n                color: 'black',\n                fontSize: '20px'\n              }\n            },\n            yAxis: [{\n              title: {\n                text: '% Change from Historical (1981-2010)',\n                style: {\n                  color: 'black',\n                  fontSize: '20px'\n                }\n              },\n              labels: {\n                style: {\n                  color: 'black',\n                  fontSize: '16px'\n                }\n              },\n              allowDecimals: false\n            }],\n            xAxis: [{\n              categories: ['1', '2', '6', '24', '72'],\n              title: {\n                text: 'Duration (hours)', \n                style: {\n                  color: 'black',\n                  fontSize: '20px'\n                }\n              },\n              labels: {\n                style: {\n                  color: 'black',\n                  fontSize: '16px'\n                }\n              },\n              allowDecimals: false\n            }],\n            plotOptions: {\n              scatter: {\n                marker: {\n                  radius: 7\n                }\n              }\n            }\n        }\n      },\n      title: {\n        text: 'Projected Change v Duration: 25-year Event, 2050s', //changed by radio and menu\n        style: {\n          color: 'black',\n          fontSize: '20px'\n        }\n      },\n      xAxis: {\n        categories: ['1', '2', '6', '24', '72'], // changed by radio\n        title: {\n          enabled: true,\n          text: 'Duration (hours)', // changed by radio\n          style: {\n            color: 'black',\n            fontSize: '16px'\n          }\n        },\n        labels: {\n          style: {\n            color: 'black',\n            fontSize: '13px'\n          }\n        }\n      },\n      yAxis: {\n        title: {\n          text: '% Change from Historical (1981-2010)',\n          style: {\n            color: 'black',\n            fontSize: '14px'\n          }\n        },\n        plotLines: [{\n          color: '#C0C0C0',\n          width: 2,\n          value: 0\n        }],\n        labels: {\n          style: {\n            color: 'black',\n            fontSize: '13px'\n          }\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'left',\n        verticalAlign: 'bottom',\n        x: 40,\n        y: 30,\n        floating: true,\n        backgroundColor: '#FFFFFF',\n        borderWidth: 1,\n      },\n      plotOptions: {\n        scatter: {\n          marker: {\n             radius: 5,\n            states: {\n              hover: {\n                enabled: true,\n                lineColor: 'rgb(100,100,100)'\n              }\n            }\n          },\n          states: {\n            hover: {\n              marker: {\n                enabled: false\n              }\n            }\n          }\n        }\n      },\n      series: [{\n        name : 'Individual Model',\n        className: 'ind-model',\n        color: 'rgba(11, 118, 183, .6)',\n        border: 'solid 2px black',\n        data: [],\n        tooltip: {\n          headerFormat: '',\n          pointFormat:'<span>Individual Model: <b>{point.gcm}</b></span><br/><span>Projected Change: <b>{point.y} %</b></span><br/><span>Duration: <b>{point.duration}</b></span><br/><span>Return Invterval: <b>{point.returnInt}</b></span><br/><span>Time Period: <b>{point.decade}</b> relative to 1981-2010</span><br/><span>Greenhouse Gas Scenario: <b>RCP 8.5 (High)</b></span>'\n        }\n      }, \n      {\n        name: 'Model Average', \n        className: 'model-avg',\n        marker: {\n          symbol: 'diamond',\n          radius: 7,\n        },\n        color: '#D74D26',\n        data: [], //changed by radio\n        tooltip: {\n          headerFormat: '',\n          pointFormat:'<span><b> Model Average </span></b><br/><span>Projected Change: <b>{point.y} %</b></span><br/><span>Duration: <b>{point.duration}</b></span><br/><span>Return Invterval: <b>{point.returnInt}</b></span><br/><span>Time Period: <b>{point.decade}</b> relative to 1981-2010</span><br/><span>Greenhouse Gas Scenario: <b>RCP 8.5 (High)</b></span>'\n        }\n      }]\n    }    \n  }\n  \n\n  componentDidMount () {\n    this.fetchJSON(this.props.selectedGridCell.column_ind, this.props.selectedGridCell.row_index_);\n  }\n\n  componentDidUpdate(prevProps: VizProps) {\n    if (this.props.selectedGridCell.Center_Lon !== prevProps.selectedGridCell.Center_Lon || this.props.selectedGridCell.Center_Lat !== prevProps.selectedGridCell.Center_Lat) {\n      this.fetchJSON(this.props.selectedGridCell.column_ind, this.props.selectedGridCell.row_index_);\n    }\n  }\n\n  fetchJSON(x: number, y: number) {\n    fetch('https://data.cig.uw.edu/picea/stormwater/pub/viz_data/grid_x' + x + '_y' + y + '.json',\n      { headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      let chartData: any = [];\n      if(this.state.xAxisParam === \"decade\") {\n        chartData = this.filterDecadeData(data, this.state.duration, this.state.returnInt);\n      } else if (this.state.xAxisParam === \"duration\") {\n        chartData = this.filterPrecipData(data, this.state.decade, this.state.xAxisParam, this.state.returnInt);\n      } else if (this.state.xAxisParam === \"return-int\") {\n        chartData = this.filterPrecipData(data, this.state.decade, this.state.xAxisParam, this.state.duration);\n      }\n\n      let newVizConfig: any = this.state.vizConfig;\n      newVizConfig.series[0].data = chartData[\"modelsArr\"];\n      newVizConfig.series[1].data = chartData[\"mediansArr\"];\n      const csvData: any[] = jsonToCSV(data);\n      this.setState({\n        vizConfig: newVizConfig,\n        gridJSON: data,\n        csvData: csvData\n      })\n    })\n    .catch(function(err) {\n      console.log('Fetch Error :-S', err);\n    });\n  }\n\n  filterPrecipData (data: any, decade: string, chartType: string, filterValue: number) {\n\n    let modelsArr: any[] = [];\n    let mediansArr: any[] = [];\n\n    const decadeStrMap: any = {\n      \"2030\": \"2020-2049\",\n      \"2040\": \"2030-2059\",\n      \"2050\": \"2040-2069\",\n      \"2060\": \"2050-2079\",\n      \"2070\": \"2060-2089\",\n      \"2080\": \"2070-2099\"\n    };\n    const durArrValues: number[] = [1, 2, 6, 24, 72];\n    const returnArrValues: number[] = [2, 5, 10, 25, 50, 100]\n    const decadeData: any = data[decadeStrMap[decade]];\n\n  \n    if (chartType === \"duration\") {\n      //choose all projection values for all durations given a return-interval filterValue\n      for (const gcmKey in decadeData) {\n        const gcmDataObj: any = decadeData[gcmKey];\n        \n        for (const durKey in gcmDataObj) {\n          const durDataObj: any = gcmDataObj[durKey];\n          const returnIntKey: string = `${filterValue}-yr`\n          const projectionVal: number = Number(durDataObj[returnIntKey].toFixed(0));\n          const durStr: string = durKey.substring(0, durKey.length-3);\n          \n          const chartPoint : any = {\n            x: durArrValues.indexOf(Number(durStr)),\n            y: projectionVal,\n            duration: durKey,\n            returnInt: returnIntKey,\n            gcm: gcmKey.slice(0, gcmKey.length-13),\n            decade: `${decade} (${decadeStrMap[decade]})`\n          };\n          if(chartPoint['gcm'] === 'ensemble') {\n            mediansArr[chartPoint['x']] = chartPoint\n          } else {\n            modelsArr.push(chartPoint);\n          }\n        }\n      } \n    } else if (chartType === \"return-int\") {\n      // choose all projection values for all return-int values given a duration filterValue\n      for (const gcmKey in decadeData) {\n        const gcmDataObj: any = decadeData[gcmKey];\n        const durKey: string = `${filterValue}-hr`;\n        const durDataObj: any = gcmDataObj[durKey];\n        for (const returnIntKey in durDataObj) {\n          const projectionVal: number = Number(durDataObj[returnIntKey].toFixed(0));\n          const returnIntStr: string = returnIntKey.substring(0, returnIntKey.length-3);\n          \n          const chartPoint : any = {\n            x: returnArrValues.indexOf(Number(returnIntStr)),\n            y: projectionVal,\n            duration: durKey,\n            returnInt: returnIntKey,\n            gcm: gcmKey.slice(0, gcmKey.length-13),\n            decade: `${decade} (${decadeStrMap[decade]})`\n          };\n          if(chartPoint['gcm'] === 'ensemble') {\n            mediansArr[chartPoint['x']] = chartPoint\n          } else {\n            modelsArr.push(chartPoint);\n          }\n        };\n      };\n    };\n\n\n\n    return {\n      modelsArr: modelsArr,\n      mediansArr: mediansArr\n    };\n  }\n\n  filterDecadeData (data: any, duration: number, returnInt: number) {\n\n    let modelsArr: any[] = [];\n    let mediansArr: any[] = [];\n\n    \n    const decadeStrMap: any = [\n      [\"2030\", \"2020-2049\"],\n      [\"2040\", \"2030-2059\"],\n      [\"2050\", \"2040-2069\"],\n      [\"2060\", \"2050-2079\"],\n      [\"2070\", \"2060-2089\"],\n      [\"2080\", \"2070-2099\"]\n    ];\n    \n    const durKey: string = duration + \"-hr\";\n    const retIntKey: string = returnInt + \"-yr\"\n\n    for (let i = 0; i < decadeStrMap.length; i++) {\n\n      const decadeData = data[decadeStrMap[i][1]] \n\n      for (let key in decadeData) {\n        const projectionVal: number = Number(decadeData[key][durKey][retIntKey].toFixed(0));\n    \n        const chartPoint : any = {\n          x: i,\n          y: projectionVal,\n          duration: durKey,\n          returnInt: retIntKey,\n          gcm: key.slice(0, key.length-13),\n          decade: `${decadeStrMap[i][0]}s (${decadeStrMap[i][1]})`\n        };\n        if(chartPoint['gcm'] === 'ensemble') {\n          mediansArr[chartPoint['x']] = chartPoint\n        } else {\n          modelsArr.push(chartPoint);\n        }\n      }\n    }\n\n    return {\n      modelsArr: modelsArr,\n      mediansArr: mediansArr\n    };\n  }\n\n  xAxisToggle (event: React.ChangeEvent<HTMLInputElement>): void {\n    let newVizConfig: any = this.state.vizConfig;\n    if(event.target.value === \"duration\") {\n      newVizConfig.title.text = `Projected Change v Duration: ${this.state.returnInt}-year Event, ${this.state.decade}s`;\n      newVizConfig.xAxis.title.text = \"Duration (hours)\";\n      newVizConfig.xAxis.categories = [1, 2, 6, 24, 72];\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Duration: ${this.state.returnInt}-year Event, ${this.state.decade}s`;\n      newVizConfig.exporting.chartOptions.xAxis[0].title.text = \"Duration (hours)\";\n      newVizConfig.exporting.chartOptions.xAxis[0].categories = [1, 2, 6, 24, 72];\n      const chartData = this.filterPrecipData(this.state.gridJSON, this.state.decade, event.target.value, this.state.returnInt);\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    } else if (event.target.value === \"return-int\") {\n      newVizConfig.title.text = `Projected Change v Return Interval: ${this.state.duration}-hour Event, ${this.state.decade}s`;\n      newVizConfig.xAxis.title.text = \"Return Interval (years)\";\n      newVizConfig.xAxis.categories = [2, 5, 10, 25, 50, 100];\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Return Interval: ${this.state.duration}-hour Event, ${this.state.decade}s`;\n      newVizConfig.exporting.chartOptions.xAxis[0].title.text = \"Return Interval (years)\";\n      newVizConfig.exporting.chartOptions.xAxis[0].categories = [2, 5, 10, 25, 50, 100];\n      const chartData = this.filterPrecipData(this.state.gridJSON, this.state.decade, event.target.value, this.state.duration);\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    } else if (event.target.value === \"decade\") {\n      newVizConfig.title.text = `Projected Change v Decade: ${this.state.returnInt}-year, ${this.state.duration}-hour Event`;\n      newVizConfig.xAxis.title.text = \"Decade\";\n      newVizConfig.xAxis.categories = ['2030s', '2040s', '2050s', '2060s', '2070s', '2080s'];\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Decade: ${this.state.returnInt}-year, ${this.state.duration}-hour Event`;\n      newVizConfig.exporting.chartOptions.xAxis[0].title.text = \"Decade\";\n      newVizConfig.exporting.chartOptions.xAxis[0].categories = ['2030s', '2040s', '2050s', '2060s', '2070s', '2080s'];\n      const chartData = this.filterDecadeData(this.state.gridJSON, this.state.duration, this.state.returnInt);\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    }\n      \n      this.setState({\n        xAxisParam: event.target.value,\n        vizConfig: newVizConfig  \n      })\n  } \n\n  handleReturnIntChange (event: React.ChangeEvent<HTMLSelectElement>): void {\n    let newVizConfig: any = this.state.vizConfig;\n    if(this.state.xAxisParam === \"duration\") {\n      newVizConfig.title.text = `Projected Change v Duration: ${event.target.value}-year Event, ${this.state.decade}s`;\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Duration: ${event.target.value}-year Event, ${this.state.decade}s`;\n      const chartData = this.filterPrecipData(this.state.gridJSON, this.state.decade, this.state.xAxisParam, Number(event.target.value));\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    } else if (this.state.xAxisParam === \"decade\") {\n      newVizConfig.title.text = `Projected Change v Decade: ${event.target.value}-year, ${this.state.duration}-hour Event`;\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Decade: ${event.target.value}-year, ${this.state.duration}-hour Event`;\n      const chartData = this.filterDecadeData(this.state.gridJSON, this.state.duration, Number(event.target.value))\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    }\n\n    this.setState({\n      returnInt: Number(event.target.value),\n      vizConfig: newVizConfig  \n    })\n  }\n\n  handleDurationChange (event: React.ChangeEvent<HTMLSelectElement>): void {\n    let newVizConfig: any = this.state.vizConfig;\n    if (this.state.xAxisParam === \"return-int\") {\n      newVizConfig.title.text = `Projected Change v Return Interval: ${event.target.value}-hour Event, ${this.state.decade}s`;\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Return Interval: ${event.target.value}-hour Event, ${this.state.decade}s`;\n      const chartData = this.filterPrecipData(this.state.gridJSON, this.state.decade, this.state.xAxisParam, Number(event.target.value));\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    } else if (this.state.xAxisParam === \"decade\") {\n      newVizConfig.title.text = `Projected Change v Decade: ${this.state.returnInt}-year, ${event.target.value}-hour Event`;\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Decade: ${this.state.returnInt}-year, ${event.target.value}-hour Event`;\n      const chartData = this.filterDecadeData(this.state.gridJSON, Number(event.target.value), this.state.returnInt)\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    }\n    \n    this.setState({\n      duration: Number(event.target.value),\n      vizConfig: newVizConfig  \n    })\n  }\n  \n  handleDecadeChange (event: React.ChangeEvent<HTMLSelectElement>): void {\n    let newVizConfig: any = this.state.vizConfig;\n    if(this.state.xAxisParam === \"duration\") {\n      newVizConfig.title.text = `Projected Change v Duration: ${this.state.returnInt}-year Event, ${event.target.value}s`\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Duration: ${this.state.returnInt}-year Event, ${event.target.value}s`\n      const chartData = this.filterPrecipData(this.state.gridJSON, event.target.value, this.state.xAxisParam, this.state.returnInt)\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    } else if (this.state.xAxisParam === \"return-int\") {\n      newVizConfig.title.text = `Projected Change v Return Interval: ${this.state.duration}-hour Event, ${event.target.value}s`\n      newVizConfig.exporting.chartOptions.title.text = `Projected Change v Return Interval: ${this.state.duration}-hour Event, ${event.target.value}s`\n      const chartData = this.filterPrecipData(this.state.gridJSON, event.target.value, this.state.xAxisParam, this.state.duration)\n      newVizConfig.series[0].data = chartData[\"modelsArr\"]\n      newVizConfig.series[1].data = chartData[\"mediansArr\"]\n    }\n\n    this.setState({\n      decade: event.target.value,\n      vizConfig: newVizConfig\n    })\n  }\n  \n\n  render() {\n    return(\n      <div id=\"viz-container\">\n        <VizSelectors \n          gridCell={this.props.selectedGridCell}\n          xAxisParam={this.state.xAxisParam}\n          duration={this.state.duration}\n          returnInt={this.state.returnInt}\n          decade={this.state.decade}\n          csvData={this.state.csvData}\n          xAxisToggle={this.xAxisToggle.bind(this)}\n          handleReturnIntChange={this.handleReturnIntChange.bind(this)}\n          handleDurationChange={this.handleDurationChange.bind(this)}\n          handleDecadeChange={this.handleDecadeChange.bind(this)}\n        />\n        <VizFigure \n          vizConfig={this.state.vizConfig} \n          xAxisParam={this.state.xAxisParam}\n          duration={this.state.duration}\n          returnInt={this.state.returnInt}\n          decade={this.state.decade}\n          gridJSON={this.state.gridJSON}\n          gridCell={this.props.selectedGridCell}\n        />\n      </div>\n    )\n  }\n}\n\nexport default VizContainer;","import React from 'react';\nimport '../styles/App.css';\n\nconst ReturnArrow: React.FC = () => {\n  return (\n    <div id=\"footer-arrow\">\n      <svg \n        version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\" \n        xmlnsXlink=\"http://www.w3.org/1999/xlink\" \n        x=\"0px\" \n        y=\"0px\"\n        width=\"20px\" \n        height=\"20px\" \n        viewBox=\"0 0 250 250\"\n      >\n        <path \n          fill=\"#354374\"\n          d=\"M120.774,179.271v40c47.303,0,85.784-38.482,85.784-85.785c0-47.3-38.481-85.782-85.784-85.782H89.282L108.7,28.286\n          L80.417,0L12.713,67.703l67.703,67.701l28.283-28.284L89.282,87.703h31.492c25.246,0,45.784,20.538,45.784,45.783\n          C166.558,158.73,146.02,179.271,120.774,179.271z\"/>\n      </svg>\n    </div>\n  )\n}\n\nexport default ReturnArrow;","import React from 'react';\nimport '../styles/App.css';\nimport Nav from './Nav';\nimport LeafletMap from './Map';\nimport Modal from './Modal'\nimport VizContainer from './VizContainer';\nimport ReturnArrow from './ReturnArrow';\nimport { LeafletEvent, LatLngTuple } from 'leaflet';\nimport GridCell from '../types/GridCell'\n\ntype AppState = {\n  selectedGridCell: GridCell\n  renderMapView: boolean;\n  center: LatLngTuple;\n  zoom: number;\n  showModal: boolean;\n}\n\nclass App extends React.Component<any, AppState> {\n  state: Readonly<AppState> = {\n    renderMapView: true,\n    selectedGridCell: {\n      Center_Lat: 0,\n      Center_Lon: 0,\n      column_ind: 0,\n      row_index_: 0\n    },\n    center: [45.3, -116.9],\n    zoom: 5,\n    showModal: true\n  };\n\n\n  mapClick(e: LeafletEvent, feature: any, mapZoom: number): void {\n  \n    if (this.state.renderMapView) {\n      this.setState({\n        renderMapView: false,\n        selectedGridCell: feature.properties,\n        center: [feature.properties.Center_Lat, feature.properties.Center_Lon],\n        zoom: mapZoom || this.state.zoom\n      });\n    } else {\n      this.setState({\n        selectedGridCell: feature.properties\n      });\n    }\n  }\n\n  navBtnClick(event: any): void {\n    this.setState({ renderMapView: true });\n  }\n\n  closeModal(): void {\n    this.setState({ showModal: false })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal showModal={this.state.showModal} closeModal={this.closeModal.bind(this)} />\n        <Nav\n          renderMapView={this.state.renderMapView}\n          selectedGridCell={this.state.selectedGridCell}\n          navBtnClick={this.navBtnClick.bind(this)}\n          navMapClick={this.mapClick.bind(this)}\n        />\n        {this.state.renderMapView ?\n          \n          (<LeafletMap\n            selectedGridCell={this.state.selectedGridCell}\n            center={this.state.center}\n            zoom={this.state.zoom}\n            zoomControl={true}\n            clickHandler={this.mapClick.bind(this)}\n          />)\n          :\n          (<VizContainer selectedGridCell={this.state.selectedGridCell} />)  \n        }\n        <div id=\"app-footer\">\n          <a id=\"link\" href=\"https://cig.uw.edu/projects/heavy-precipitation-projections-for-use-in-stormwater-planning/\">\n            <div id=\"footer-text\">\n              Return to Project Page\n            </div>\n            <ReturnArrow />\n          </a>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}